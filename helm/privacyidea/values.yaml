# Default values for privacyidea.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gitlab.desy.de:5555/it-infa/multifactor/privacyidea-docker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
initImage:
  repository: gitlab.desy.de:5555/it-infa/multifactor/privacyidea-docker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 500

securityContext:
  runAsNonRoot: true
  runAsUser: 500

service:
  type: ClusterIP
  port: 8080

strategy:
  type: RollingUpdate

ingress:
  enabled: false
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: privacy.chart-example.local
      paths:
      - path: /
        pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

privacyidea:
  host: privacy.chart-example.local
  database:
    external:
    type:
    existingSecret:
  admin:
    user: admin
    password: password
    existingSecret:
  secretKey:
  pepper:
  customization:
    logoPath: 
  persistence:
    enabled: true
    storageClass: "-"
    size: 1G
    existingClaim:

extraVolumes: ""

extraVolumeMounts: ""

postgresql:
  # If `true`, the Postgresql dependency is enabled
  enabled: true
  # PostgreSQL User to create
  postgresqlUsername: pi
  # PostgreSQL Password for the new user
  postgresqlPassword: privacyidea
  # PostgreSQL Database to create
  postgresqlDatabase: pidb
  # PostgreSQL network policy configuration
  networkPolicy:
    enabled: false

mysql:
  enabled: false

pgchecker:
  image:
    # Docker image used to check Postgresql readiness at startup
    repository: docker.io/busybox
    # Image tag for the pgchecker image
    tag: 1.32
    # Image pull policy for the pgchecker image
    pullPolicy: IfNotPresent
  # SecurityContext for the pgchecker container
  securityContext:
    allowPrivilegeEscalation: false
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  # Resource requests and limits for the pgchecker container
  resources:
    requests:
      cpu: "20m"
      memory: "32Mi"
    limits:
      cpu: "20m"
      memory: "32Mi"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

affinity: {}

tolerations: []
